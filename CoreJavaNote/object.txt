java.lang is most important 
it is impossible to write a programe without java.lang package
most commonly used classes and interfaces are encapsulated(grouped) into a 
seperate package java.lang
class test{
psvm(String []arg)
{
sop("Hello");
}}  
by default super class is Object is super class defined in lang package
psvm(String []asd)  here string is defined in lang package
System is defined in lang package
without using java.lang package we can't use class keyword,System....etc
no need to import lang package expecitly because all classes and interfaces 
present in lang package by default available to every java programme

Object class:(java.lang.Object):
Object is root(parent) for any java class
For any java class most commomly reqd. methods for every java class(whether it
is perdefined or customized class) are defined in a seperate class which is 
Object class 

String class contains methods which are applicable for string object
 
Object class contain 11 methods
  public final native java.lang.Class<?> getClass();
  public native int hashCode();
  public java.lang.String toString();
  public boolean equals();
  protected native java.lang.Object clone() ;
  public java.lang.String toString();
  public final native void notify();
  public final native void notifyAll();
  public final native void wait(long);
  public final void wait(long, int) ;
  public final void wait();
  protected void finalize() ;

toString:
call to string method on object
we can use toString method to get the string representation of an object
String st=obj.toString();

whenever we are tring to print obj. reference internally toString
method will be called
Student s=new Student();
sop(s); //internally sop(s.toString());

 
hashcode:hashcode and address object are not releated
for every object a unique no. generated by jvm which is hashcode
most powerful search algo. is hasing

public native int hashCode()
if i donot override hashcode than object class hashcode will be executed 
if we are giving the chance to obj.class hashcode method it will generate 
hash code based on address of object it dosen't mean hash code represent 
address of the object based on our requirement we can ovverride hashcode 
method in our class to generate our own hash code 




public boolean equals();
we can use equals method to check equality of two objects if our class 
doesnot contain equals method then object class equals method will be executed

by default equals comapre object of reference variable so to comapare the 
actual content of both the reference variable we can override our equals 
method
while ovrridding equals mtd for content comparision we have to take care
about the following: 

1.what is meaning of equality(whether we have to check only names or only roll
no or both)
2.if we are passing different type of object our equals mtd should rise 
class cast exception 
3.if we ar epassing null arguments than our equals md should rise null pointer 
exception

if our class dosenot contain equals mtd than obj class equals mtd will be executed 